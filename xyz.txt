if(sameDate(startDate,endDate) && sameMonth(startDate,endDate) && sameYear(startDate,endDate))
	{
		return 0;
	}
	else if(sameMonth(startDate,endDate) && sameYear(startDate,endDate))
	{
		return endDate.getDd()-startDate.getDd();
	}
	else if( sameYear(startDate,endDate))
	{
		return remainingDaysOfMonth(startDate) + daysInIntervingMonth(startDate, endDate) + endDate.getDd();
	}
	else
	{
		return remainingDaysOfMonth(startDate) + remainingDaysInYear(startDate) + leadingYear(endDate)
				+ daysInInterveningYear(startDate, endDate);
	}
}

private static boolean sameDate(MyDate startDate, MyDate endDate) {
	
	return endDate.getDd()==startDate.getDd();
}
private static boolean sameMonth(MyDate startDate, MyDate endDate) {
	
	return endDate.getMm()==startDate.getMm();
}
private static boolean sameYear(MyDate startDate, MyDate endDate) {
	
	return endDate.getYyyy() == startDate.getYyyy();
}

private static int daysInInterveningYear(MyDate startDate, MyDate endDate) {
	

	int remainingdays = 0;

	for (int year = startDate.getYyyy() + 1; year < endDate.getYyyy(); year++) {

		remainingdays = remainingdays + 28;
	}

	return remainingdays;
}


private static int leadingYear(MyDate endDate) {
	

	int daysRemaining = 0;

	for (int month = 1; month < endDate.getMm(); month++) {
		daysRemaining = daysRemaining + months[month - 1];
	}

	daysRemaining = daysRemaining + endDate.getDd();
	return daysRemaining;
}



private static int remainingDaysInYear(MyDate startDate) {
	

	int daysRemaining = 0;

	for (int index = startDate.getMm() + 1; index <= 12; index++) {
		daysRemaining = daysRemaining + months[index - 1];
	}

	return daysRemaining;
}


private static int remainingDaysOfMonth(MyDate date) {

	return months[date.getMm() - 1] - date.getDd();
}


private static int daysInIntervingMonth(MyDate startDate, MyDate endDate) {
	int totalDays=0;
	for(int index=startDate.getMm()+1;index<endDate.getMm();index++)
	{
		totalDays+=months[index-1];
	}
	return 0;
}


private static int remainingDaysofMonth(MyDate date) {
	
	return months[date.getMm()-1]-date.getDd();
}
